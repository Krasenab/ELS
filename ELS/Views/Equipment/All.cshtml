@model FilteredEquipmentViewModel
@{
    ViewData["Title"] = "All Equipment";
}

<div class="flex-grow font-sans antialiased bg-gray-50">

    
    <section class="bg-gradient-to-r from-sky-400 to-indigo-600 py-16">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 text-white">
            <h1 class="text-4xl sm:text-5xl font-extrabold mb-4 flex items-center gap-3">
                <i class="fas fa-layer-group"></i>
                All Equipment
            </h1>
            <p class="opacity-90 max-w-2xl mb-8">
                Search and filter our entire equipment catalog in real time.
            </p>
            <div class="flex flex-col sm:flex-row gap-4">

                <!-- Search Input -->
               <div class="relative flex-1">
                    <input id="searchByText"
                           type="search"
                           placeholder="Search equipment..."
                           class="w-full pl-12 pr-4 py-3 rounded-full bg-white text-gray-800 placeholder-gray-400
                   focus:outline-none focus:ring-2 focus:ring-white focus:ring-opacity-50 transition-shadow shadow-sm hover:shadow" />
                    <span class="absolute left-4 top-1/2 -translate-y-1/2 text-gray-400">
                        <i class="fas fa-search"></i>
                    </span>
                </div>

        
                <div class="relative w-20 sm:w-60">
                    <select id="categoryFilter"
                            class="w-full appearance-none pl-4 pr-10 py-3 rounded-full bg-white text-gray-800
                   focus:outline-none focus:ring-2 focus:ring-sky-400 transition-shadow shadow-sm hover:shadow">
                        <option value="">All Categories</option>
                        @foreach (var category in Model.Categories)
                        {
                            <option value="@category.Name">@category.Name</option>
                        }
                    </select>
                    <span class="pointer-events-none absolute inset-y-0 right-4 flex items-center text-sky-400 text-xl">
                        <i class="fas fa-chevron-down"></i>
                    </span>
                </div>

                <!-- Status Filter (NEW!) -->
                <div class="relative w-20 sm:w-60">
                    <select id="statusFilter"
                            class="w-full appearance-none pl-4 pr-10 py-3 rounded-full bg-white text-gray-800
                   focus:outline-none focus:ring-2 focus:ring-sky-400 transition-shadow shadow-sm hover:shadow">
                        <option value="">All Statuses</option>
                        @foreach (var status in Model.Statuses) // това трябва да е списък със статуси в твоя ViewModel!
                        {
                            <option value="@status">@status</option>
                        }
                    </select>
                    <span class="pointer-events-none absolute inset-y-0 right-4 flex items-center text-sky-400 text-xl">
                        <i class="fas fa-chevron-down"></i>
                    </span>
                </div>
            </div>
        </div>
    </section>

 
    <div id="allEquipmentPartial" class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
        <partial name="_AllFilteredEquipmentPartial" model="Model" />
    </div>

    @if (Model.TotalPages > 1)
    {
        <div class="flex justify-center mt-8 space-x-2 text-sm font-medium select-none">

            @* Предишна страница *@
            @if (Model.PageNumber > 1)
            {
                <button class="pagination-btn px-4 py-2 rounded-full bg-white text-indigo-600 border border-indigo-300 hover:bg-indigo-50 transition"
                        data-page="@(Model.PageNumber - 1)">
                    ← Prev
                </button>
            }

            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <button class="pagination-btn px-4 py-2 rounded-full border transition
                                        @(i == Model.PageNumber
                                                                                                ? "bg-sky-600 text-white font-semibold shadow"
                                                                                                : "bg-white text-indigo-600 border-indigo-300 hover:bg-indigo-50")"
                data-page="@i">
            @i
        </button>
                }

            @* Следваща страница *@
            @if (Model.PageNumber < Model.TotalPages)
            {
                <button class="pagination-btn px-4 py-2 rounded-full bg-white text-indigo-600 border border-indigo-300 hover:bg-indigo-50 transition"
                        data-page="@(Model.PageNumber + 1)">
                    Next →
                </button>
            }
        </div>
    }

</div>

<script src="https://code.jquery.com/jquery-3.7.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.js"></script>
<link href="https://cdn.jsdelivr.net/npm/aos@2.3.4/dist/aos.css" rel="stylesheet" />
<script>
    AOS.init({ duration: 600, once: true });

       function loadEquipment(search, category, status, page = 1) {
        $.get("/Equipment/AllFiltered", {
            searchTerm: search,
            category: category,
            status: status,
            page: page 
        }, function (html) {
            $("#allEquipmentPartial").html(html);
            AOS.refresh();
        });
    }

    $(function () {
        loadEquipment("@Model.SearchTerm", "@Model.CategoryFilter", "@Model.StatusFilter");
        $('#searchByText').on("input", function () {
            loadEquipment(this.value, $('#categoryFilter').val(), $('#statusFilter').val());
        });
        $('#categoryFilter').on("change", function () {
            loadEquipment($('#searchByText').val(), this.value, $('#statusFilter').val());
        });
        $('#statusFilter').on("change", function () {
            loadEquipment($('#searchByText').val(), $('#categoryFilter').val(), this.value);
        });
    });
        $(document).on("click", ".pagination-btn", function () {
        const page = $(this).data("page");
        const search = $('#searchByText').val();
        const category = $('#categoryFilter').val();
        const status = $('#statusFilter').val();

        loadEquipment(search, category, status, page);
    });
</script>
